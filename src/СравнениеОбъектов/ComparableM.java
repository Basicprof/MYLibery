package СравнениеОбъектов;



public class ComparableM {
     class Person implements Comparable<Person>{

        private String name;
        public Person(String value){

            name=value;
        }
        String getName(){return name;}

        public int compareTo(Person p){

            return name.compareTo(p.getName());
        }
    }
    //Интерфейс Comparable содержит один единственный метод int compareTo(E item),
    // который сравнивает текущий объект с объектом, переданным в качестве параметра.
    // Если этот метод возвращает отрицательное число, то текущий объект
    // будет располагаться перед тем, который передается через параметр.
    // Если метод вернет положительное число, то, наоборот, после второго объекта.
    // Если метод возвратит ноль, значит, оба объекта равны.

    //В данном случае мы не возвращаем явным образом никакое число, а полагаемся
    // на встроенный механизм сравнения, который есть у класса String.
    // Но мы также можем определить и свою логику, например, сравнивать по длине имени:

 }
      //Однако перед нами может возникнуть проблема, что если разработчик не реализовал
    // в своем классе, который мы хотим использовать, интерфейс Comparable,
    // либо реализовал, но нас не устраивает его функциональность, и мы
    // хотим ее переопределить? На этот случай есть еще более гибкий
    // способ, предполагающий применение интерфейса Comparator<E>.
